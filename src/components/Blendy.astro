---
import MultistepForm from "@components/ui/multistepform/multistepForm";
const { id, text = 'Quiero una web que brille', buttonClass } = Astro.props;
---

<!-- Source element -->
<button class:list={[
  "cta-button rounded-[2rem] hover:bg-slate-700 border-4 border-secondary hover:border-primary text-center px-4 py-2 transition-colors",
  buttonClass
  ]} data-blendy-from="modal">
  <slot>
    <span data-blendy-from="title">{text}</span>
  </slot>
</button>

<!-- Target element -->
<div class="backdrop backdrop-blur-lg left-0 hidden pointer-events-none top-0 fixed z-40 bg-slate-950/50 w-full h-full" />
<template class="modal-template">
  <div class="modal fixed left-0 top-10 right-0 flex flex-col justify-self-center self-center place-self-center z-50 w-11/12 max-w-3xl rounded-2xl bg-slate-800 text-white border-primary border-2" data-blendy-to="modal">
    <div class="w-full px-4 py-2 flex justify-between text-2xl">
      <header class="flex flex-col">
        <h2 data-blendy-to="title text-balance">{text}</h2>
        <p class="text-slate-400 text-base text-pretty">Completa este formulario en menos de 5 minutos para que podamos enviarte un presupuesto personalizado para tu proyecto.</p>
      </header>
      <button class="close w-5 h-5 justify-center flex items-center">x</button>
    </div>
    <div class="px-4 py-2">
      
      <MultistepForm client:visible />
    </div>
  </div>
</template>


<script>
  import { createBlendy } from "blendy";

  document.addEventListener('astro:page-load', () => {    
    const blendy = createBlendy({
      animation: 'dynamic' // or 'spring'
    })
    const buttons = document.querySelectorAll(".cta-button") as NodeListOf<HTMLElement>;
    const modalTemplate = document.querySelector(`.modal-template`) as HTMLTemplateElement;
    const backdrop = document.querySelector(".backdrop");
    const body = document.querySelector("body");

    if (!modalTemplate || !buttons || !backdrop || !body) return;

    document.body.addEventListener("click", (e: MouseEvent) => {
      const target = e.target as HTMLElement | null;
      if (target && target.classList.contains("close")) {
        blendy.untoggle("modal", () => {
          const modal = document.querySelector(".modal");
          if (modal) {
            body.classList.remove("overflow-hidden");
            backdrop.classList.add("hidden");
            modal.remove();
          }
        });
      }
    });
  
    buttons.forEach((button) => {
      button.addEventListener("click", (e: MouseEvent) => {
        e.stopPropagation();
        body.classList.add("overflow-hidden");
        backdrop.classList.remove("hidden");
        document.body.appendChild(modalTemplate.content.cloneNode(true));
        blendy.toggle("modal");
      });
    });
  });
  
</script>
