---
import BgRounded from '@components/backgrounds/BgRounded.astro';
import BgStars from '@components/backgrounds/BgStars.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import LogoAstroHeader from '@components/Logos/LogoAstroHeader.astro';
import { ViewTransitions } from 'astro:transitions';
import '@fontsource/ibm-plex-sans';
import '@fontsource/ibm-plex-sans/100.css';
import '@fontsource/ibm-plex-sans/300.css';
import '@fontsource/ibm-plex-sans/400.css';
import '@fontsource/ibm-plex-sans/700.css';
import '@fontsource/ibm-plex-sans-condensed/100.css';
import '@fontsource/ibm-plex-sans-condensed/300.css';
import '@fontsource/ibm-plex-sans-condensed/400.css';
import '@fontsource/ibm-plex-sans-condensed/700.css';
import BaseHead from '@components/seo/BaseHead.astro';
import RichSnippets from '@components/seo/RichSnippets.astro';

interface Props {
	title: string;
	description: string;
	simpleLogo?: boolean;
	image?: string;
}

const { title, description, simpleLogo = false, image = 'open-graph/OpenGraph-home.jpg' } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<BaseHead title={title} description={description} image={image} />
		<RichSnippets title={title} description={description} image={image} />
		<ViewTransitions />
	</head>
	<body>
		<BgRounded />
		<BgStars />
		<LogoAstroHeader simpleLogo={simpleLogo} className="max-h-40 w-min md:max-h-60 transition-all fixed top-3 -z-20 blur-3xl" />
		<LogoAstroHeader simpleLogo={simpleLogo} className="max-h-40 w-min md:max-h-60 transition-all fixed top-3 z-30 opacity-50" />
		<Header />
		<slot />
		<Footer />
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}

	html {
		font-family: 'IBM Plex Sans', sans-serif;
		scroll-behavior: smooth;
		@apply bg-background;
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}

	textarea {
		field-sizing: content;
	}

	.wrapper-text::before {
		content: "";
    position: sticky;
    width: 100%;
    top: 0;
    left: 0;
    height: 2rem;
    pointer-events: none;
    display: block;
    background: linear-gradient(0deg, rgba(0,0,0,0) 0%, rgba(30,41,60,1) 50%);
	}

	.wrapper-text::after {
		content: "";
    position: sticky;
    width: 100%;
    bottom: 0;
    left: 0;
    height: 2rem;
    pointer-events: none;
    display: block;
    background: linear-gradient(0deg, rgba(30,41,60,1) 50%, rgba(0,0,0,0) 100%);
	}

	@media (prefers-reduced-motion: no-preference) {
    .bento-item {
      scale: 0.8;
      opacity: 0;
      animation: fade-in linear forwards;
      animation-timeline: view();
      animation-range: entry 100px;
    }

    @keyframes fade-in {
      to {
        scale: 1;
        opacity: 1;
      }
    }

		@keyframes animate_border {
			to {
				transform: translateX(-50%);
			}
		}

		@keyframes moveInTop {
			0% {
				opacity: 0;
				transform: translateY(5rem);
			}
			100% {
				opacity: 1;
				transform: translateY(0);
			}
		}
  }
</style>